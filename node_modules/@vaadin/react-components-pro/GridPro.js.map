{
  "version": 3,
  "sources": ["src/GridPro.tsx", "src/generated/GridPro.ts"],
  "sourcesContent": ["export * from \"@vaadin/grid-pro/vaadin-grid-pro.js\";\n/**\n * @license\n * Copyright (c) 2000 - 2024 Vaadin Ltd.\n *\n * This program is available under Vaadin Commercial License and Service Terms.\n *\n *\n * See https://vaadin.com/commercial-license-and-service-terms for the full\n * license.\n */\nimport { type ForwardedRef, forwardRef, type ReactElement, type RefAttributes } from 'react';\nimport type { GridDefaultItem, GridProps } from '@vaadin/react-components/Grid.js';\nimport { GridPro as _GridPro, type GridProElement, type GridProProps as _GridProProps } from './generated/GridPro.js';\nimport { useModelRenderer } from '@vaadin/react-components/renderers/useModelRenderer.js';\n\nexport * from './generated/GridPro.js';\n\nexport type GridProProps<TItem> = Partial<Omit<_GridProProps<TItem>, 'rowDetailsRenderer'>> &\n  Readonly<{\n    rowDetailsRenderer?: GridProps<TItem>['rowDetailsRenderer'];\n  }>;\n\nfunction GridPro<TItem = GridDefaultItem>(\n  props: GridProProps<TItem>,\n  ref: ForwardedRef<GridProElement<TItem>>,\n): ReactElement | null {\n  const [portals, rowDetailsRenderer] = useModelRenderer(props.rowDetailsRenderer);\n\n  return (\n    <_GridPro<TItem> {...props} ref={ref} rowDetailsRenderer={rowDetailsRenderer}>\n      {props.children}\n      {portals}\n    </_GridPro>\n  );\n}\n\nconst ForwardedGridPro = forwardRef(GridPro) as <TItem = GridDefaultItem>(\n  props: GridProProps<TItem> & RefAttributes<GridProElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedGridPro as GridPro };\n", "import type { EventName } from \"@lit/react\";\nimport { GridPro as GridProElement, type GridProEventMap as _GridProEventMap, } from \"@vaadin/grid-pro/vaadin-grid-pro.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridProElement, };\nexport type GridProEventMap<T1> = Readonly<{\n    onActiveItemChanged: EventName<_GridProEventMap<T1>[\"active-item-changed\"]>;\n    onCellActivate: EventName<_GridProEventMap<T1>[\"cell-activate\"]>;\n    onColumnResize: EventName<_GridProEventMap<T1>[\"column-resize\"]>;\n    onExpandedItemsChanged: EventName<_GridProEventMap<T1>[\"expanded-items-changed\"]>;\n    onLoadingChanged: EventName<_GridProEventMap<T1>[\"loading-changed\"]>;\n    onSelectedItemsChanged: EventName<_GridProEventMap<T1>[\"selected-items-changed\"]>;\n    onCellFocus: EventName<_GridProEventMap<T1>[\"cell-focus\"]>;\n    onColumnReorder: EventName<_GridProEventMap<T1>[\"column-reorder\"]>;\n    onGridDragend: EventName<_GridProEventMap<T1>[\"grid-dragend\"]>;\n    onGridDragstart: EventName<_GridProEventMap<T1>[\"grid-dragstart\"]>;\n    onGridDrop: EventName<_GridProEventMap<T1>[\"grid-drop\"]>;\n    onCellEditStarted: EventName<_GridProEventMap<T1>[\"cell-edit-started\"]>;\n    onItemPropertyChanged: EventName<_GridProEventMap<T1>[\"item-property-changed\"]>;\n    onSizeChanged: EventName<CustomEvent<unknown>>;\n    onDataProviderChanged: EventName<CustomEvent<unknown>>;\n    onEnterNextRowChanged: EventName<CustomEvent<unknown>>;\n    onSingleCellEditChanged: EventName<CustomEvent<unknown>>;\n}>;\nconst events = { onActiveItemChanged: \"active-item-changed\", onCellActivate: \"cell-activate\", onColumnResize: \"column-resize\", onExpandedItemsChanged: \"expanded-items-changed\", onLoadingChanged: \"loading-changed\", onSelectedItemsChanged: \"selected-items-changed\", onCellFocus: \"cell-focus\", onColumnReorder: \"column-reorder\", onGridDragend: \"grid-dragend\", onGridDragstart: \"grid-dragstart\", onGridDrop: \"grid-drop\", onCellEditStarted: \"cell-edit-started\", onItemPropertyChanged: \"item-property-changed\", onSizeChanged: \"size-changed\", onDataProviderChanged: \"data-provider-changed\", onEnterNextRowChanged: \"enter-next-row-changed\", onSingleCellEditChanged: \"single-cell-edit-changed\" } as GridProEventMap<unknown>;\nexport type GridProProps<T1> = WebComponentProps<GridProElement<T1>, GridProEventMap<T1>>;\nexport const GridPro = createComponent({\n    elementClass: GridProElement, events, react: React, tagName: \"vaadin-grid-pro\"\n}) as <T1>(props: GridProProps<T1> & React.RefAttributes<GridProElement<T1>>) => React.ReactElement | null;\n"],
  "mappings": "AAAA,WAAc,sCAWd,OAA4B,cAAAA,MAAyD,QCVrF,OAAS,WAAWC,MAAiE,sCACrF,UAAYC,MAAW,QACvB,OAAS,mBAAAC,MAA+C,6BAqBxD,IAAMC,EAAS,CAAE,oBAAqB,sBAAuB,eAAgB,gBAAiB,eAAgB,gBAAiB,uBAAwB,yBAA0B,iBAAkB,kBAAmB,uBAAwB,yBAA0B,YAAa,aAAc,gBAAiB,iBAAkB,cAAe,eAAgB,gBAAiB,iBAAkB,WAAY,YAAa,kBAAmB,oBAAqB,sBAAuB,wBAAyB,cAAe,eAAgB,sBAAuB,wBAAyB,sBAAuB,yBAA0B,wBAAyB,0BAA2B,EAEhqBC,EAAUC,EAAgB,CACnC,aAAcC,EAAgB,OAAAH,EAAQ,MAAOI,EAAO,QAAS,iBACjE,CAAC,EDdD,OAAS,oBAAAC,MAAwB,yDAgB7B,eAAAC,MAAA,oBAPJ,SAASC,EACPC,EACAC,EACqB,CACrB,GAAM,CAACC,EAASC,CAAkB,EAAIN,EAAiBG,EAAM,kBAAkB,EAE/E,OACEF,EAACC,EAAA,CAAiB,GAAGC,EAAO,IAAKC,EAAK,mBAAoBE,EACvD,UAAAH,EAAM,SACNE,GACH,CAEJ,CAEA,IAAME,EAAmBC,EAAWN,CAAO",
  "names": ["forwardRef", "GridProElement", "React", "createComponent", "events", "GridPro", "createComponent", "GridProElement", "React", "useModelRenderer", "jsxs", "GridPro", "props", "ref", "portals", "rowDetailsRenderer", "ForwardedGridPro", "forwardRef"]
}
