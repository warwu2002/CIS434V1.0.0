import type { EventName } from "@lit/react";
import { Chart as ChartElement, type ChartEventMap as _ChartEventMap } from "@vaadin/charts/vaadin-chart.js";
import * as React from "react";
import { type WebComponentProps } from "../utils/createComponent.js";
export * from "@vaadin/charts/vaadin-chart.js";
export { ChartElement, };
export type ChartEventMap = Readonly<{
    onChartAddSeries: EventName<_ChartEventMap["chart-add-series"]>;
    onChartAfterExport: EventName<_ChartEventMap["chart-after-export"]>;
    onChartAfterPrint: EventName<_ChartEventMap["chart-after-print"]>;
    onChartBeforeExport: EventName<_ChartEventMap["chart-before-export"]>;
    onChartBeforePrint: EventName<_ChartEventMap["chart-before-print"]>;
    onChartClick: EventName<_ChartEventMap["chart-click"]>;
    onChartDrilldown: EventName<_ChartEventMap["chart-drilldown"]>;
    onChartDrillup: EventName<_ChartEventMap["chart-drillup"]>;
    onChartDrillupall: EventName<_ChartEventMap["chart-drillupall"]>;
    onChartLoad: EventName<_ChartEventMap["chart-load"]>;
    onChartRedraw: EventName<_ChartEventMap["chart-redraw"]>;
    onChartSelection: EventName<_ChartEventMap["chart-selection"]>;
    onPointClick: EventName<_ChartEventMap["point-click"]>;
    onPointLegendItemClick: EventName<_ChartEventMap["point-legend-item-click"]>;
    onPointMouseOut: EventName<_ChartEventMap["point-mouse-out"]>;
    onPointMouseOver: EventName<_ChartEventMap["point-mouse-over"]>;
    onPointRemove: EventName<_ChartEventMap["point-remove"]>;
    onPointSelect: EventName<_ChartEventMap["point-select"]>;
    onPointUnselect: EventName<_ChartEventMap["point-unselect"]>;
    onPointUpdate: EventName<_ChartEventMap["point-update"]>;
    onSeriesAfterAnimate: EventName<_ChartEventMap["series-after-animate"]>;
    onSeriesCheckboxClick: EventName<_ChartEventMap["series-checkbox-click"]>;
    onSeriesClick: EventName<_ChartEventMap["series-click"]>;
    onSeriesHide: EventName<_ChartEventMap["series-hide"]>;
    onSeriesLegendItemClick: EventName<_ChartEventMap["series-legend-item-click"]>;
    onSeriesMouseOut: EventName<_ChartEventMap["series-mouse-out"]>;
    onSeriesMouseOver: EventName<_ChartEventMap["series-mouse-over"]>;
    onSeriesShow: EventName<_ChartEventMap["series-show"]>;
    onXaxesExtremesSet: EventName<_ChartEventMap["xaxes-extremes-set"]>;
    onYaxesExtremesSet: EventName<_ChartEventMap["yaxes-extremes-set"]>;
}>;
export type ChartProps = WebComponentProps<ChartElement, ChartEventMap>;
export declare const Chart: (props: Partial<import("@vaadin/react-components/utils/createComponent.d.ts").ThemedWebComponentProps<ChartElement, Readonly<{
    onChartAddSeries: EventName<_ChartEventMap["chart-add-series"]>;
    onChartAfterExport: EventName<_ChartEventMap["chart-after-export"]>;
    onChartAfterPrint: EventName<_ChartEventMap["chart-after-print"]>;
    onChartBeforeExport: EventName<_ChartEventMap["chart-before-export"]>;
    onChartBeforePrint: EventName<_ChartEventMap["chart-before-print"]>;
    onChartClick: EventName<_ChartEventMap["chart-click"]>;
    onChartDrilldown: EventName<_ChartEventMap["chart-drilldown"]>;
    onChartDrillup: EventName<_ChartEventMap["chart-drillup"]>;
    onChartDrillupall: EventName<_ChartEventMap["chart-drillupall"]>;
    onChartLoad: EventName<_ChartEventMap["chart-load"]>;
    onChartRedraw: EventName<_ChartEventMap["chart-redraw"]>;
    onChartSelection: EventName<_ChartEventMap["chart-selection"]>;
    onPointClick: EventName<_ChartEventMap["point-click"]>;
    onPointLegendItemClick: EventName<_ChartEventMap["point-legend-item-click"]>;
    onPointMouseOut: EventName<_ChartEventMap["point-mouse-out"]>;
    onPointMouseOver: EventName<_ChartEventMap["point-mouse-over"]>;
    onPointRemove: EventName<_ChartEventMap["point-remove"]>;
    onPointSelect: EventName<_ChartEventMap["point-select"]>;
    onPointUnselect: EventName<_ChartEventMap["point-unselect"]>;
    onPointUpdate: EventName<_ChartEventMap["point-update"]>;
    onSeriesAfterAnimate: EventName<_ChartEventMap["series-after-animate"]>;
    onSeriesCheckboxClick: EventName<_ChartEventMap["series-checkbox-click"]>;
    onSeriesClick: EventName<_ChartEventMap["series-click"]>;
    onSeriesHide: EventName<_ChartEventMap["series-hide"]>;
    onSeriesLegendItemClick: EventName<_ChartEventMap["series-legend-item-click"]>;
    onSeriesMouseOut: EventName<_ChartEventMap["series-mouse-out"]>;
    onSeriesMouseOver: EventName<_ChartEventMap["series-mouse-over"]>;
    onSeriesShow: EventName<_ChartEventMap["series-show"]>;
    onXaxesExtremesSet: EventName<_ChartEventMap["xaxes-extremes-set"]>;
    onYaxesExtremesSet: EventName<_ChartEventMap["yaxes-extremes-set"]>;
}>>> & React.RefAttributes<ChartElement>) => React.ReactElement | null;
//# sourceMappingURL=Chart.d.ts.map