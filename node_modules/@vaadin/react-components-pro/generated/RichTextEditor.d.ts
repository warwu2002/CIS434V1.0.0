import type { EventName } from "@lit/react";
import { RichTextEditor as RichTextEditorElement, type RichTextEditorEventMap as _RichTextEditorEventMap } from "@vaadin/rich-text-editor/vaadin-rich-text-editor.js";
import * as React from "react";
import { type WebComponentProps } from "../utils/createComponent.js";
export * from "@vaadin/rich-text-editor/vaadin-rich-text-editor.js";
export { RichTextEditorElement, };
export type RichTextEditorEventMap = Readonly<{
    onChange: EventName<_RichTextEditorEventMap["change"]>;
    onValueChanged: EventName<_RichTextEditorEventMap["value-changed"]>;
    onHtmlValueChanged: EventName<_RichTextEditorEventMap["html-value-changed"]>;
}>;
export type RichTextEditorProps = WebComponentProps<RichTextEditorElement, RichTextEditorEventMap>;
export declare const RichTextEditor: (props: Partial<import("@vaadin/react-components/utils/createComponent.d.ts").ThemedWebComponentProps<RichTextEditorElement, Readonly<{
    onChange: EventName<_RichTextEditorEventMap["change"]>;
    onValueChanged: EventName<_RichTextEditorEventMap["value-changed"]>;
    onHtmlValueChanged: EventName<_RichTextEditorEventMap["html-value-changed"]>;
}>>> & React.RefAttributes<RichTextEditorElement>) => React.ReactElement | null;
//# sourceMappingURL=RichTextEditor.d.ts.map